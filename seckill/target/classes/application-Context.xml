<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

<!-- 配置整合mybatis过程 -->
    <!-- 1:配置数据库相关参数
        properties的属性 ： ${url}
    -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--2.数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- 2017-2-20 yuhm 第二次继续 -->
        <!-- c3p0连接池的私有属性 -->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!-- 关闭连接后不自动commit，默认false，但是也写出来 -->
        <property name="autoCommitOnClose" value="false"/>
        <!-- 当连接池满了的时候，请求等待连接的时间 -->
        <property name="checkoutTimeout" value="2000"/>
        <!-- 当获取连接失败重试次数 -->
        <property name="acquireRetryAttempts" value="3"/>

    </bean>


    <!-- 约定大于配置 -->
    <!-- 3:配置SqlSessionFactory对象 -->
    <bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 诸如数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置MyBatis全局配置文件：mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描entity包，使用别名 org.seckill.entity.Seckill 转译为 Seckill -->
        <property name="typeAliasesPackage" value="org.seckill.entity"/>
        <!-- 扫描sql配置文件：mapper需要xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入spring容器中  -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactoy-->
        <property name="sqlSessionFactoryBeanName" value="SqlSessionFactory"/>
        <!-- 给出扫描Dao接口包 -->
        <property name="basePackage" value="org.seckill.dao"/>
    </bean>


<!--    &lt;!&ndash; service配置 &ndash;&gt;
    &lt;!&ndash;扫描所有service包下，使用注解的文件&ndash;&gt;
    <context:component-scan base-package="org.seckill.service"/>
    &lt;!&ndash;配置事务的管理器&ndash;&gt;

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        &lt;!&ndash; 注入数据库的连接池 &ndash;&gt;
        <property name="dataSource" ref="dataSource"/>
    </bean>
    &lt;!&ndash; 配置基于注解的声明式事务
        默认使用注解来管理事务行为
    &ndash;&gt;
&lt;!&ndash;    <tx:annotation-driven transaction-manager="transactionManager"/>&ndash;&gt;
    <tx:annotation-driven transaction-manager="transactionManager"/>-->

 </beans>